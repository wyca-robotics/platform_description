<?xml version="1.0"?>
<robot name="platform" xmlns:xacro="http://www.ros.org/wiki/xacro">

  <!-- Include all xacro:macro definition files -->
  <xacro:include filename="$(find platform_description)/urdf/properties.xacro" />
  <xacro:include filename="$(find platform_description)/urdf/mast.xacro" />


  <gazebo>
    <plugin
      filename="libignition-gazebo-sensors-system.so"
      name="ignition::gazebo::systems::Sensors">
    </plugin>
    <plugin
      filename="ignition-gazebo-physics-system"
      name="ignition::gazebo::systems::Physics">
    </plugin>
    <plugin
      filename="ignition-gazebo-user-commands-system"
      name="ignition::gazebo::systems::UserCommands">
    </plugin>
    <plugin
      filename="ignition-gazebo-scene-broadcaster-system"
      name="ignition::gazebo::systems::SceneBroadcaster">
    </plugin>
  </gazebo>
   


  <!-- BASE-FOOTPRINT -->
  <!-- base_footprint is the origin of the robot -->
  <!-- It represents the robot -->
  <link name="base_footprint">

    <footprint_clearing_3d>
      <origin xyz="-0.0 -0.0 0.20" rpy="0 0 0" />
      <geometry>
          <cylinder length="0.40" radius="0.27" inside="true"/>
      </geometry>
    </footprint_clearing_3d>
  </link>

  <!-- BASE-LINK -->
  <!-- Virtual link between the wheels -->
  <link name="base_link">
  <xacro:if value="${base_shape == 'circle'}">
    <visual>
      <origin xyz="0.0 0.0 ${(base_height-base_ground_clearance)/2 + base_ground_clearance - wheel_radius}" rpy="0 0 0"/>
      <geometry>
        <cylinder length="${base_height}" radius="${base_radius}" />
      </geometry>
      <xacro:property name="k_dim" value="0.55" />
      <material name="white">
        <color rgba="1 1 1 0.5"/>
      </material>
    </visual>
    <collision>
      <origin xyz="0.0 0.0 ${(base_height-base_ground_clearance)/2 + base_ground_clearance - wheel_radius}" rpy="0 0 0" />
      <geometry>
        <cylinder length="${base_height}" radius="${base_radius}" />
      </geometry>
    </collision>
    <inertial>
      <origin xyz="0.0 0.0 ${(base_height-base_ground_clearance)/2 + base_ground_clearance - wheel_radius}" rpy="0 0 0" />
      <xacro:cylinder_inertia  m="${base_mass}" r="${base_radius}" h="${base_height}" />
    </inertial>
  </xacro:if>

  <xacro:if value="${base_shape == 'rectangle'}">
    <visual>
      <origin xyz="0.0 0.0 ${(base_height-base_ground_clearance)/2 + base_ground_clearance - wheel_radius}" rpy="0 0 0"/>
      <geometry>
        <box size="${2*base_radius} ${2*base_radius} ${base_height}"/>
      </geometry>
      <material name="white">
        <color rgba="1 1 1 0.5"/>
      </material>
    </visual>
    <xacro:property name="k_dim" value="0.75" />
    <collision>
      <origin xyz="0.0 0.0 ${(base_height-base_ground_clearance)/2 + base_ground_clearance - wheel_radius}" rpy="0 0 0" />
      <geometry>
        <box size="${2*base_radius} ${2*base_radius} ${base_height}"/>
      </geometry>
    </collision>
    <inertial>
      <origin xyz="0.0 0.0 ${(base_height-base_ground_clearance)/2 + base_ground_clearance - wheel_radius}" rpy="0 0 0" />
      <xacro:box_inertia  m="${base_mass}" x="${2*base_radius}" y="${2*base_radius}" z="${base_height}" />
    </inertial>
  </xacro:if>
  </link>

  <joint name="base_footprint_joint" type="fixed">
      <origin xyz="0 0 ${wheel_radius}" rpy="0 0 0" />
      <parent link="base_footprint"/>
      <child link="base_link" />
  </joint>

  <link name="left_wheel">
    <visual>
      <geometry>
        <cylinder length="${wheel_height}" radius="${wheel_radius}" />
      </geometry>
      <material name="black">
        <color rgba="0 0 0 1"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <cylinder length="${wheel_height}" radius="${wheel_radius}" />
      </geometry>
    </collision>
    <inertial>
      <xacro:cylinder_inertia  m="${wheel_mass}" r="${wheel_radius}" h="${wheel_height}" />
    </inertial>
  </link>

  <link name="right_wheel">
    <visual>
      <geometry>
        <cylinder length="${wheel_height}" radius="${wheel_radius}" />
      </geometry>
      <material name="black">
        <color rgba="0 0 0 1"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <cylinder length="${wheel_height}" radius="${wheel_radius}" />
      </geometry>
    </collision>
    <inertial>
      <xacro:cylinder_inertia  m="${wheel_mass}" r="${wheel_radius}" h="${wheel_height}" />
    </inertial>
  </link>

  <joint name="left_wheel_joint" type="revolute">
    <origin xyz="0.0 ${base_y_origin_to_wheel_origin} 0.0" rpy="-1.5707 0 0"/>
    <parent link="base_link"/>
    <child link="left_wheel"/>
    <axis xyz="0 0 1"/>
    <dynamics damping="0.15"/>
    <limit lower="-1.79769e+308" upper="1.79769e+308" effort="35.8" velocity="100" />
  </joint>

  <joint name="right_wheel_joint" type="revolute">
    <origin xyz="0.0 ${-base_y_origin_to_wheel_origin} 0.0" rpy="-1.5707 0 0"/>
    <parent link="base_link"/>
    <child link="right_wheel"/>
    <axis xyz="0 0 1"/>
    <dynamics damping="0.15"/>
    <limit lower="-1.79769e+308" upper="1.79769e+308" effort="35.8" velocity="100" />
  </joint>

  <xacro:if value="${wheel_number == 4}">
   <link name="front_caster">
      <visual>
         <geometry>
         <sphere radius="${caster_radius}" />
         </geometry>
         <material name="black">
         <color rgba="0 0 0 1"/>
         </material>
      </visual>
      <collision>
         <geometry>
         <sphere radius="${caster_radius}" />
         </geometry>
      </collision>
      <inertial>
         <xacro:sphere_inertia  m="${caster_mass}" r="${caster_radius}" />
      </inertial>
   </link>

   <joint name="front_caster_joint" type="fixed">
      <origin xyz="0.2 0.0 ${caster_radius}" rpy="0 0 0"/>
      <parent link="base_footprint"/>
      <child link="front_caster"/>
   </joint>

   <link name="back_caster">
      <visual>
         <geometry>
         <sphere radius="${caster_radius}" />
         </geometry>
         <material name="black">
         <color rgba="0 0 0 1"/>
         </material>
      </visual>
      <collision>
         <geometry>
         <sphere radius="${caster_radius}" />
         </geometry>
      </collision>
      <inertial>
         <xacro:sphere_inertia  m="${caster_mass}" r="${caster_radius}" />
      </inertial>
   </link>

   <joint name="back_caster_joint" type="fixed">
      <origin xyz="-0.2 0.0 ${caster_radius}" rpy="0 0 0"/>
      <parent link="base_footprint"/>
      <child link="back_caster"/>
   </joint>
  </xacro:if>

  <xacro:if value="${wheel_number == 6}">
   <link name="front_left_caster">
      <visual>
         <geometry>
         <sphere radius="${caster_radius}" />
         </geometry>
         <material name="black">
         <color rgba="0 0 0 1"/>
         </material>
      </visual>
      <collision>
         <geometry>
         <sphere radius="${caster_radius}" />
         </geometry>
      </collision>
      <inertial>
         <xacro:sphere_inertia  m="${caster_mass}" r="${caster_radius}" />
      </inertial>
   </link>

   <joint name="front_left_caster_joint" type="fixed">
      <origin xyz="${base_radius*k_dim} ${base_radius*k_dim} ${caster_radius}" rpy="0 0 0"/>
      <parent link="base_footprint"/>
      <child link="front_left_caster"/>
   </joint>

   <link name="front_right_caster">
      <visual>
         <geometry>
         <sphere radius="${caster_radius}" />
         </geometry>
         <material name="black">
         <color rgba="0 0 0 1"/>
         </material>
      </visual>
      <collision>
         <geometry>
         <sphere radius="${caster_radius}" />
         </geometry>
      </collision>
      <inertial>
         <xacro:sphere_inertia  m="${caster_mass}" r="${caster_radius}" />
      </inertial>
   </link>

   <joint name="front_right_caster_joint" type="fixed">
      <origin xyz="${base_radius*k_dim} ${-base_radius*k_dim} ${caster_radius}" rpy="0 0 0"/>
      <parent link="base_footprint"/>
      <child link="front_right_caster"/>
   </joint>

   <link name="back_left_caster">
      <visual>
         <geometry>
         <sphere radius="${caster_radius}" />
         </geometry>
         <material name="black">
         <color rgba="0 0 0 1"/>
         </material>
      </visual>
      <collision>
         <geometry>
         <sphere radius="${caster_radius}" />
         </geometry>
      </collision>
      <inertial>
         <xacro:sphere_inertia  m="${caster_mass}" r="${caster_radius}" />
      </inertial>
   </link>

   <joint name="back_left_caster_joint" type="fixed">
      <origin xyz="${-base_radius*k_dim} ${base_radius*k_dim} ${caster_radius}" rpy="0 0 0"/>
      <parent link="base_footprint"/>
      <child link="back_left_caster"/>
   </joint>

   <link name="back_right_caster">
      <visual>
         <geometry>
         <sphere radius="${caster_radius}" />
         </geometry>
         <material name="black">
         <color rgba="0 0 0 1"/>
         </material>
      </visual>
      <collision>
         <geometry>
         <sphere radius="${caster_radius}" />
         </geometry>
      </collision>
      <inertial>
         <xacro:sphere_inertia  m="${caster_mass}" r="${caster_radius}" />
      </inertial>
   </link>

   <joint name="back_right_caster_joint" type="fixed">
      <origin xyz="${-base_radius*k_dim} ${-base_radius*k_dim} ${caster_radius}" rpy="0 0 0"/>
      <parent link="base_footprint"/>
      <child link="back_right_caster"/>
   </joint>
  </xacro:if>

    <!-- MAST -->
  <!-- <link name="mast">
    <visual>
        <origin xyz="0.0 0.0 ${mast_height/2}" rpy="0 0 0" />
        <geometry>
          <cylinder length="${mast_height}" radius="${wheel_radius}"/>
        </geometry>
        <material name="blue">
          <color rgba="0 1 0 1"/>
        </material>
    </visual>
    <collision>
      <origin xyz="0.0 0.0 ${mast_height/2}" rpy="0 0 0" />
      <geometry>
        <cylinder length="${mast_height}" radius="${wheel_radius}"/>
      </geometry>
    </collision>
<     <inertial>
      <origin xyz="0.0 0.0 ${mast_height/2}" rpy="0 0 0" />
      <xacro:cylinder_inertia  m="20" r="${wheel_radius}" h="${mast_height}" />
    </inertial> >
  </link>
  
  <joint name="mast_joint" type="fixed">
    <origin xyz="0 0 ${base_height + 0.05/2 + base_ground_clearance/2.0}" rpy="0 0 0" />
    <parent link="base_footprint"/>
    <child link="mast" />
  </joint> -->

  <xacro:Mast name="mast" parent="base_footprint" >
    <origin rpy="0.0 0.0 0.0" xyz="0.0 0.0 ${base_height}" />
  </xacro:Mast>

  <gazebo>
    <plugin
      filename="libignition-gazebo-diff-drive-system.so"
      name="ignition::gazebo::systems::DiffDrive">
      <left_joint>left_wheel_joint</left_joint>
      <right_joint>right_wheel_joint</right_joint>
      <wheel_separation>${base_y_origin_to_wheel_origin*2}</wheel_separation>
      <wheel_radius>${wheel_radius}</wheel_radius>
      <odom_publish_frequency>20</odom_publish_frequency>
      <topic>cmd_vel</topic>
      <odom_topic>odom</odom_topic>
      <tf_topic>tf</tf_topic>
      <frame_id>odom</frame_id>
      <child_frame_id>base_footprint</child_frame_id>
      <max_acceleration>100</max_acceleration>
      <max_velocity>2</max_velocity>
    </plugin>
  </gazebo>

  <!-- LIDAR -->
  <link name="laser">
      <visual>
          <origin xyz="0.0 0.0 0.0" rpy="0 0 0" />
          <geometry>
            <!--cylinder length="0.05" radius="0.075"/-->
            <mesh filename="urdf/meshes/r2000.stl" scale="1.0 1.0 1.0" />
          </geometry>
          <material name="blue">
            <color rgba="0 1 0 1"/>
          </material>
      </visual>
  </link>

  <gazebo reference="laser" >
    <sensor name='laser' type='gpu_lidar'>
    <ignition_frame_id>laser</ignition_frame_id>
      <topic>scan</topic>
      <update_rate>20</update_rate>
      <lidar>
        <scan>
          <horizontal>
            <samples>2800</samples>
            <resolution>1</resolution>
            <min_angle>-2.09</min_angle>
            <max_angle>2.09</max_angle>
          </horizontal>
          <vertical>
            <samples>1</samples>
            <resolution>0.1</resolution>
            <min_angle>0.0</min_angle>
            <max_angle>0.0</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.05</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
      </lidar>
      <alwaysOn>1</alwaysOn>
      <visualize>true</visualize>
    </sensor>
  </gazebo>

  <joint name="laser_joint" type="fixed">
      <origin xyz="-0.20 0 ${base_height + 0.05/2 + base_ground_clearance/2.0}" rpy="0 0 0" />
      <parent link="base_footprint"/>
      <child link="laser" />
  </joint>
</robot>
